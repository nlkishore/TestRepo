# -------------------------------------------------------------------
# T O R Q U E   P R O P E R T I E S
# -------------------------------------------------------------------

# -------------------------------
# Database Adapter Configuration
# -------------------------------
torque.database.default=helloworld
torque.database.helloworld.adapter=oracle

# -------------------------------
# JNDI DataSource Configuration
# -------------------------------
torque.dsfactory.helloworld.factory=org.apache.torque.dsfactory.JndiDataSourceFactory
torque.dsfactory.helloworld.jndi.path=java:comp/env/jdbc/turbine
torque.dsfactory.helloworld.jndi.ttl=300000

# -------------------------------
# IDBroker Configuration
# -------------------------------
torque.idbroker.cleverquantity=true
torque.idbroker.prefetch=true
torque.idbroker.initialId=101
torque.idBroker.initialIdValue=100
torque.idbroker.initialIdStep=500
torque.idbroker.usenewconnection=true

# -------------------------------
# Caching Configuration
# -------------------------------
torque.manager.useCache=true

# -------------------------------
# Optional: Default fallback (commented)
# -------------------------------
# If not using JNDI, uncomment below and switch factory to SharedPool2DataSourceFactory
# torque.dsfactory.helloworld.factory=org.apache.torque.dsfactory.SharedPool2DataSourceFactory
# torque.dsfactory.helloworld.connection.driver=oracle.jdbc.driver.OracleDriver
# torque.dsfactory.helloworld.connection.url=jdbc:oracle:thin:@lxgebodsgv0e02:1521:gebdasg
# torque.dsfactory.helloworld.connection.user=geb
# torque.dsfactory.helloworld.connection.password=UobWelcome1234#
# torque.dsfactory.helloworld.pool.maxTotal=20
# torque.dsfactory.helloworld.pool.validationQuery=SELECT 1 FROM DUAL
# torque.dsfactory.helloworld.pool.defaultAutoCommit=true




***************************

META-INF/Context.xml

<Context>
  <Resource name="jdbc/turbine"
            auth="Container"
            type="javax.sql.DataSource"
            driverClassName="oracle.jdbc.driver.OracleDriver"
            url="jdbc:oracle:thin:@lxgebodsgv0e02:1521:gebdasg"
            username="geb"
            password="UobWelcome1234#"
            maxTotal="20"
            maxIdle="10"
            maxWaitMillis="10000"
            validationQuery="SELECT 1 FROM DUAL"
            testOnBorrow="true"
            defaultAutoCommit="true"/>
</Context>


***************************

WEB-INF/web.xml 

<web-app xmlns="http://jakarta.ee/xml/ns/jakartaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://jakarta.ee/xml/ns/jakartaee
                             http://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd"
         version="5.0">

  <!-- JNDI Resource Reference for Torque -->
  <resource-ref>
    <description>Oracle DB connection for Torque</description>
    <res-ref-name>jdbc/turbine</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>

  <!-- Optional: Torque Initialization Listener -->
  <listener>
    <listener-class>com.mycompany.listeners.TorqueInitListener</listener-class>
  </listener>

</web-app>


****************************

package com.mycompany.listeners;

import jakarta.servlet.ServletContextEvent;
import jakarta.servlet.ServletContextListener;
import org.apache.torque.Torque;
import org.apache.torque.TorqueException;

public class TorqueInitListener implements ServletContextListener {
    @Override
    public void contextInitialized(ServletContextEvent sce) {
        try {
            Torque.init("WEB-INF/classes/Torque.properties");
            System.out.println("✅ Torque initialized successfully.");
        } catch (TorqueException e) {
            throw new RuntimeException("❌ Torque initialization failed", e);
        }
    }

    @Override
    public void contextDestroyed(ServletContextEvent sce) {
        try {
            Torque.shutdown();
        } catch (TorqueException e) {
            System.err.println("⚠️ Torque shutdown warning: " + e.getMessage());
        }
    }
}

